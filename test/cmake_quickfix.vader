Before:
  " Ensure we are in the test directory
  if isdirectory("test")
    cd test
  endif

  if !exists("test_dir")
    let test_dir = fnamemodify(getcwd(), ':p')
  endif

  let g:cmake_build_dir = "tmp-build"

  Assert !isdirectory("test project_bad_cmake/tmp-build"),
    \ "TEST ERROR: build directory 'test project_bad_cmake/tmp-build' was not properly deleted"
  if has("win32")
    echo system('mkdir "test project_bad_cmake\\tmp-build"')
  else
    echo system("mkdir 'test project_bad_cmake/tmp-build'")
  endif
  Assert isdirectory("test project_bad_cmake/tmp-build"),
    \ "TEST ERROR: build directory was not created"
  Assert !filereadable("test project_bad_cmake/.CMakeLists.txt.swp"),
    \ "TEST ERROR: swap file of CMakeLists.txt exists"

After:
  exec "cd" fnameescape(test_dir)
  if has("win32")
    echo system('rmdir /S/Q "test project_bad_cmake\tmp-build"')
    echo system('del /Q "test project_bad_cmake\compile_commands.json"')
  else
    echo system("rm -rf 'test project_bad_cmake/tmp-build'")
    echo system("rm -f 'test project_bad_cmake/compile_commands.json'")
  endif


Execute (:CMake jumps to error in CMakeLists.txt file):
  cd test\ project_bad_cmake
  CMake
  cc!
Then:
  AssertEqual expand('%:p'), fnamemodify(test_dir."test\ project_bad_cmake", ":p")."CMakeLists.txt",
    \ ":cc did not open ".fnamemodify(test_dir."test\ project_bad_cmake", ":p")."CMakeLists.txt but ".expand("%:p")
Expect:
  cmake_minimum_required(VERSION 2.8.12)

  projec(Syntax_Error)


Execute (:CMake jumps to error in CMakeLists.txt file from arbitrary directory):
  cd test\ project_bad_cmake
  CMakeFindBuildDir
  exec "cd" fnameescape(test_dir)
  cd ..
  CMake
  cc!
Then:
  AssertEqual expand('%:p'), fnamemodify(test_dir."test\ project_bad_cmake", ":p")."CMakeLists.txt",
    \ ":cc did not open ".fnamemodify(test_dir."test\ project_bad_cmake", ":p")."CMakeLists.txt but ".expand("%:p")
  Assert isdirectory("test"), ":CMake did not properly reset working directory"
Expect:
  cmake_minimum_required(VERSION 2.8.12)

  projec(Syntax_Error)

